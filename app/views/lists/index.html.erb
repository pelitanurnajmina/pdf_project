<div class="container">
	<div class="row">
		<div class="col-md-12 text-center mt-4">
			<h2>List PDF</h2>
		</div>

		<div class="col-md-12">
			<a href="lists/new" class="btn btn-primary">New List</a>
		</div>

		<div class="col-md-7 mt-2">
			<table class="table table-striped table-bordered" width="100%">
				<thead class="thead-dark">
					<tr>
						<th class="text-center" width="30px">No</th>
						<th class="text-center">Title</th>
						<th class="text-center">Filename</th>
						<th class="text-center">Action</th>
						<th class="text-center">Preview</th>
					</tr>
				</thead>
				<tbody>
					<% @lists.each do |list| %>
						<tr>
							<td class="text-center">1</td>
							<td><%= list.title %></td>
							<td><%= list.filename %></td>
							<td class="text-center">
								<%= link_to "Edit", list, :class => 'btn btn-warning btn-sm' %>
								<%= link_to "Destroy", list_path(list.id), :class => 'btn btn-danger btn-sm',
				                  method: :delete,
				                  data: { confirm: "Are you sure?" } %>
							</td>
							<td class="text-center">
								<button class="btn btn-dark btn-sm" onclick="showPdf('<%= list.filename %>')">Show PDF</button> 
							</td>
						</tr>
					<% end %>
				</tbody>
			</table>
		</div>

		<div class="col-md-5">
			<div id="pdf-main-container">
				<div id="first-text">Please click show PDF button ...</div>
				<div id="pdf-loader">Loading document ...</div>
				<div id="pdf-contents">
					<div id="pdf-meta">
						<div id="pdf-buttons">
							<button id="pdf-prev" class="btn btn-sm btn-dark">Previous</button>
							<button id="pdf-next" class="btn btn-sm btn-dark">Next</button>
						</div>
						<div id="page-count-container">Page <div id="pdf-current-page"></div> of <div id="pdf-total-pages"></div></div>
					</div>
					<canvas id="pdf-canvas" width="400"></canvas>
					<div id="page-loader">Loading page ...</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.2.228/pdf.min.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">
	var _PDF_DOC,
	    _CURRENT_PAGE,
	    _TOTAL_PAGES,
	    _PAGE_RENDERING_IN_PROGRESS = 0,
	    _CANVAS = document.querySelector('#pdf-canvas');

	// initialize and load the PDF
	async function showPDF(pdf_url) {
	    document.querySelector("#pdf-loader").style.display = 'block';

	    // get handle of pdf document
	    try {
	        _PDF_DOC = await pdfjsLib.getDocument({ url: pdf_url });
	    }
	    catch(error) {
	        alert(error.message);
	    }

	    // total pages in pdf
	    _TOTAL_PAGES = _PDF_DOC.numPages;
	    
	    // Hide the pdf loader and show pdf container
	    document.querySelector("#pdf-loader").style.display = 'none';
	    document.querySelector("#pdf-contents").style.display = 'block';
	    document.querySelector("#pdf-total-pages").innerHTML = _TOTAL_PAGES;

	    // show the first page
	    showPage(1);
	}

	// load and render specific page of the PDF
	async function showPage(page_no) {
	    _PAGE_RENDERING_IN_PROGRESS = 1;
	    _CURRENT_PAGE = page_no;

	    // disable Previous & Next buttons while page is being loaded
	    document.querySelector("#pdf-next").disabled = true;
	    document.querySelector("#pdf-prev").disabled = true;

	    // while page is being rendered hide the canvas and show a loading message
	    document.querySelector("#pdf-canvas").style.display = 'none';
	    document.querySelector("#page-loader").style.display = 'block';

	    // update current page
	    document.querySelector("#pdf-current-page").innerHTML = page_no;
	    
	    // get handle of page
	    try {
	        var page = await _PDF_DOC.getPage(page_no);
	    }
	    catch(error) {
	        alert(error.message);
	    }

	    // original width of the pdf page at scale 1
	    var pdf_original_width = page.getViewport(1).width;
	    
	    // as the canvas is of a fixed width we need to adjust the scale of the viewport where page is rendered
	    var scale_required = _CANVAS.width / pdf_original_width;

	    // get viewport to render the page at required scale
	    var viewport = page.getViewport(scale_required);

	    // set canvas height same as viewport height
	    _CANVAS.height = viewport.height;

	    // setting page loader height for smooth experience
	    document.querySelector("#page-loader").style.height =  _CANVAS.height + 'px';
	    document.querySelector("#page-loader").style.lineHeight = _CANVAS.height + 'px';

	    // page is rendered on <canvas> element
	    var render_context = {
	        canvasContext: _CANVAS.getContext('2d'),
	        viewport: viewport
	    };
	        
	    // render the page contents in the canvas
	    try {
	        await page.render(render_context);
	    }
	    catch(error) {
	        alert(error.message);
	    }

	    _PAGE_RENDERING_IN_PROGRESS = 0;

	    // re-enable Previous & Next buttons
	    document.querySelector("#pdf-next").disabled = false;
	    document.querySelector("#pdf-prev").disabled = false;

	    // show the canvas and hide the page loader
	    document.querySelector("#pdf-canvas").style.display = 'block';
	    document.querySelector("#page-loader").style.display = 'none';
	}

	function showPdf(filename) {
	    document.querySelector("#first-text").style.display = 'none';
	    showPDF('uploads/'+filename);
	}

	// click on the "Previous" page button
	document.querySelector("#pdf-prev").addEventListener('click', function() {
	    if(_CURRENT_PAGE != 1)
	        showPage(--_CURRENT_PAGE);
	});

	// click on the "Next" page button
	document.querySelector("#pdf-next").addEventListener('click', function() {
	    if(_CURRENT_PAGE != _TOTAL_PAGES)
	        showPage(++_CURRENT_PAGE);
	});
</script>